{"version":3,"sources":["components/App/App.js","index.js"],"names":["Page","styled","div","Title","h1","MessageForm","form","ErrorMessage","MessageTextArea","textarea","SubmitButton","button","MessageList","MessageContainer","MessageHead","MessageAuthor","MessageTime","MessageBody","Loading","Message","author","time","children","App","useState","messages","setMessages","messageApiError","setMessageApiError","value","setValue","postMessageError","setPostMessageError","isLoadingPostMessage","SetIsLoadingPostMessage","fetchMessahe","fetch","then","res","json","data","catch","err","message","useEffect","onSubmit","e","preventDefault","console","log","method","headers","body","JSON","stringify","nickname","ok","onChange","target","onFocus","rows","toString","length","map","Date","createdAt","toLocaleString","id","ReactDOM","render","document","getElementById"],"mappings":"+LAOMA,EAAOC,IAAOC,IAAV,gEAIJC,EAAQF,IAAOG,GAAV,4CAGLC,EAAcJ,IAAOK,KAAV,iDAGXC,EAAeN,IAAOC,IAAV,+DAMZM,EAAkBP,IAAOQ,SAAV,+DAKfC,EAAeT,IAAOU,OAAV,gDAIZC,EAAcX,IAAOC,IAAV,iDAIXW,EAAmBZ,IAAOC,IAAV,gNAehBY,EAAcb,IAAOC,IAAV,+KAQXa,EAAgBd,IAAOC,IAAV,4DAIbc,EAAcf,IAAOC,IAAV,0BAEXe,EAAchB,IAAOC,IAAV,qEAKXgB,EAAUjB,IAAOC,IAAV,gPAcb,SAASiB,EAAT,GAA4C,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,SAC9B,OACE,eAACT,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBK,IAChB,cAACJ,EAAD,UAAcK,OAEhB,cAACJ,EAAD,UAAcK,OAaL,SAASC,IAAO,IAAD,EACIC,mBAAS,MADb,mBACrBC,EADqB,KACXC,EADW,OAEkBF,mBAAS,MAF3B,mBAErBG,EAFqB,KAEJC,EAFI,OAGFJ,qBAHE,mBAGrBK,EAHqB,KAGdC,EAHc,OAIoBN,qBAJpB,mBAIrBO,EAJqB,KAIHC,EAJG,OAK4BR,oBAAS,GALrC,mBAKrBS,EALqB,KAKCC,EALD,KAOtBC,EAAe,WACnBC,MA3GiB,2EA4GhBC,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UACjBF,MAAM,SAAAG,GACLd,EAAYc,MAEbC,OAAM,SAAAC,GACLd,EAAmBc,EAAIC,aAiD3B,OAJAC,qBAAU,WACRT,MACC,IAGA,eAACnC,EAAD,WACGiC,GAAwB,cAACf,EAAD,yBAC1B,cAACf,EAAD,iCACA,eAACE,EAAD,CAAawC,SAzCQ,SAAAC,GACvBA,EAAEC,iBACEd,EACFe,QAAQC,IAAI,YAGdf,GAAwB,GAExBE,MAAM,8CAA+C,CACnDc,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,SAAU,KACVH,KAAMvB,MAGTQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJN,GAAwB,GACP,IAAZM,EAAKgB,IAIV1B,EAAS,IACTK,KAJEH,EAAoBQ,EAAKG,YAK1BF,OAAM,SAAAC,GACPR,GAAwB,GACxBF,EAAoBU,EAAIC,cAYxB,UACE,cAACnC,EAAD,CAAiBqB,MAAOA,EAAO4B,SAlDR,SAAAX,GAC3BhB,EAASgB,EAAEY,OAAO7B,QAiDiD8B,QA9CzC,SAAAb,GAC1Bd,EAAoB,OA6C6E4B,KAAK,OAClG,cAAClD,EAAD,uCACCqB,GAAoB,cAACxB,EAAD,UAAewB,OAErCJ,GACC,eAACpB,EAAD,oCACyBoB,EAAgBkC,cAG1CpC,GAAgC,IAApBA,EAASqC,QAAgB,6CACtC,cAAClD,EAAD,UACGa,GAAYA,EAASsC,KAAI,SAAApB,GACxB,OACA,cAACxB,EAAD,CAA0BC,OAAQuB,EAAQY,SAAUlC,KAAM,IAAI2C,KAAKrB,EAAQsB,WAAWC,iBAAtF,SACGvB,EAAQS,MADGT,EAAQwB,YCnLhCC,IAASC,OACR,cAAC9C,EAAD,IAEA+C,SAASC,eAAe,W","file":"static/js/main.d03b2cd0.chunk.js","sourcesContent":["// ./component/App/App.js\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst API_ENDPOINT = 'https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc';\n\nconst Page = styled.div`\n  width: 360px;\n  margin: 0 auto;\n`;\nconst Title = styled.h1`\n  color: #333;\n`;\nconst MessageForm = styled.form`\n  margin-top: 16px;\n`;\nconst ErrorMessage = styled.div`\n  marge-top: 16px;\n  color: red;\n`;\n\n\nconst MessageTextArea = styled.textarea`\n  display: block;\n  width: 100%;\n`;\n\nconst SubmitButton = styled.button`\n  margin-top: 8px;\n`;\n\nconst MessageList = styled.div`\n  margin-top: 16px;\n`;\n\nconst MessageContainer = styled.div`\n  border: 1px solid black;\n  padding: 8px 16px;\n  border-radius: 8px;\n  \n\n  // &:not(:first-child) {\n  //   margin-top: 8px;\n  // }\n\n  & + & {\n    margin-top: 8px;\n  }\n`;\n\nconst MessageHead = styled.div`\n  display: flex;\n  align-item: center;\n  justify-content: space-between;\n  padding-bottom: 4px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3)\n`;\n\nconst MessageAuthor = styled.div`\n  color: rgba(23, 78, 55, 0.3)\n`;\n\nconst MessageTime = styled.div``;\n\nconst MessageBody = styled.div`\n  margin-top: 16px;\n  font-size: 16px;\n`;\n\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  font-size: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nfunction Message({author, time, children}) {\n  return (\n    <MessageContainer>\n      <MessageHead>\n        <MessageAuthor>{author}</MessageAuthor>\n        <MessageTime>{time}</MessageTime>\n      </MessageHead>\n      <MessageBody>{children}</MessageBody>\n    </MessageContainer>\n  );\n}\n\nMessage.propTypes = {\n  author: PropTypes.string,\n  time: PropTypes.string,\n  children: PropTypes.node\n};\n\n// api https://github.com/Lidemy/lidemy-student-json-api-server\n// https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc\nexport default function App() {\n  const [messages, setMessages] = useState(null);\n  const [messageApiError, setMessageApiError] = useState(null);\n  const [value, setValue] = useState();\n  const [postMessageError, setPostMessageError] = useState();\n  const [isLoadingPostMessage, SetIsLoadingPostMessage] = useState(false);\n\n  const fetchMessahe = () => {\n    fetch(API_ENDPOINT)\n    .then( res => res.json())\n    .then( data => {\n      setMessages(data);\n    })\n    .catch(err => {\n      setMessageApiError(err.message);\n    });\n  };\n\n  const handleTextAreaChange = e => {\n    setValue(e.target.value);\n  }; \n\n  const handelTextAreaFocus = e => {\n    setPostMessageError(null);\n  }; \n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (isLoadingPostMessage) {\n      console.log('no send');\n      return;\n    }\n    SetIsLoadingPostMessage(true);\n\n    fetch('https://student-json-api.lidemy.me/comments', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        nickname: 'Hi',\n        body: value\n      })\n    })\n    .then(res => res.json())\n    .then(data => {\n      SetIsLoadingPostMessage(false);\n      if ( data.ok === 0) {\n        setPostMessageError(data.message);\n        return;\n      }\n      setValue(\"\");\n      fetchMessahe();\n    }).catch(err => {\n      SetIsLoadingPostMessage(false);\n      setPostMessageError(err.message);\n    });\n  };\n\n  useEffect(() =>{\n    fetchMessahe();\n  }, []);\n\n  return (\n     <Page>\n       {isLoadingPostMessage && <Loading>Loading...</Loading>}\n      <Title>留言板</Title>\n      <MessageForm onSubmit={handleFormSubmit}>\n        <MessageTextArea value={value} onChange={handleTextAreaChange} onFocus={handelTextAreaFocus} rows=\"10\" />\n        <SubmitButton>送出留言</SubmitButton>\n        {postMessageError && <ErrorMessage>{postMessageError}</ErrorMessage>}\n      </MessageForm>\n      {messageApiError && (\n        <ErrorMessage>\n          Something went wrong. {messageApiError.toString()}\n        </ErrorMessage>\n      )}\n      {messages && messages.length === 0 && <div>No Messahe</div>}\n      <MessageList>\n        {messages && messages.map(message =>{\n          return (\n          <Message key={message.id} author={message.nickname} time={new Date(message.createdAt).toLocaleString() }>\n            {message.body}\n          </Message>\n          );\n        })}\n\n\n      </MessageList>\n    </Page>\n  );\n}\n\n","// index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(\n\t<App />\n\t,\n\tdocument.getElementById('root')\n);\n\n\n"],"sourceRoot":""}